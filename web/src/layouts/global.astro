---
import "./global.css"

// NOTE: This is magically used as the type for Astro.props
interface Props {
	title: string

	frontmatter?: {
		title: string
		date: string
	}
}

let { title, frontmatter } = Astro.props
if (frontmatter?.title) title = frontmatter.title
---

<!doctype html>
<html lang="en" class="bg-slate-900 text-slate-100">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Media over QUIC is a new live media protocol in development by the IETF." />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/layout/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title ? `${title} - Media over QUIC` : "Media over QUIC"}</title>
	</head>
	<body>
		<div class="flex flex-col md:flex-row gap-8 md:p-8 p-4">
			<nav class="flex flex-row items-center md:flex-col md:w-72 md:gap-12 gap-4 w-full">
				<a href="/" class="w-1/2 md:w-auto">
					<img src="/layout/logo.svg" class="w-52" alt="Media over QUIC" />
				</a>
				<div class="flex flex-row flex-wrap items-center justify-center gap-4 w-1/2">
					<a href="/watch">
						<img src="/layout/watch.svg" class="w-28" alt="Watch" />
					</a>
					<a href="/publish">
						<img src="/layout/publish.svg" class="w-28" alt="Publish" />
					</a>
					<a href="/blog">
						<img src="/layout/explain.svg" class="w-28" alt="Blog" />
					</a>
					<a href="/source">
						<img src="/layout/source.svg" class="w-28" alt="Source" />
					</a>
					<a href="https://discord.gg/FCYF3p99mr">
						<img src="/layout/discord.svg" class="w-28" alt="Discord" />
					</a>
				</div>
			</nav>
			<article class="markdown">
				{
					frontmatter?.date && (
						<p class="text-sm text-gray-400 text-right">
							published {new Date(frontmatter.date).toLocaleDateString()}
						</p>
					)
				}
				<slot />
			</article>
		</div>
	</body>
</html>
